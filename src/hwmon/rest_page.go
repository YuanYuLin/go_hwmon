package hwmon

import "config"
import "net/http"
import "fmt"

func PageIndex(w http.ResponseWriter, r* http.Request) {
        fmt.Fprintf(w, "<html><title>Index</title><body><a href='/debug.html'>Debug</a></body></html>")
}

func PageTimer(w http.ResponseWriter) {
	fmt.Fprintln(w, "var timer = setInterval(ShowMeDebug, 1000);")
}

func PageGenTable(w http.ResponseWriter) {
	MAX_ENTITY := 50
	MAX_INSTANT := 100
	fmt.Fprintln(w, "var tbl = document.createElement('table');")
	fmt.Fprintln(w, "tbl.style.width='100%';")
	fmt.Fprintln(w, "tbl.setAttribute('border', '1');")
	fmt.Fprintf (w, "var MAX_E=%d;", MAX_ENTITY)
	fmt.Fprintf (w, "var MAX_I=%d;", MAX_INSTANT)
	fmt.Fprintln(w, "for(var r=0; r<MAX_E; r++) {")
	fmt.Fprintln(w, "	var tr = document.createElement('tr');")
	fmt.Fprintln(w, "	for(var c=0; c<MAX_I; c++) {")
	fmt.Fprintln(w, "		if (r === 0) {")
	fmt.Fprintln(w, "			var th = document.createElement('th');")
	fmt.Fprintln(w, "			th.innerHTML = c;")
	fmt.Fprintln(w, "			tr.appendChild(th);")
	fmt.Fprintln(w, "		} else {")
	fmt.Fprintln(w, "			var td = document.createElement('td');")
	fmt.Fprintln(w, "			td.appendChild(genInstantTable(r, c));")
	fmt.Fprintln(w, "			tr.appendChild(td);")
	fmt.Fprintln(w, "		};")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "	tbl.appendChild(tr);")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "document.body.appendChild(tbl);")
}

func PageRequestSensor(w http.ResponseWriter) {
	fmt.Fprintln(w, "function ShowMeDebug(){")

	url_abstemp := fmt.Sprintf("/api/v1/hwmon/get/device/abstemp")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableTemp);", url_abstemp, config.ENTITY_EXTERNAL_ENVIROMENT, -1)
	fmt.Fprintln(w, "")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableTemp);", url_abstemp, config.ENTITY_ADD_IN_CARD, -1)
	fmt.Fprintln(w, "")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableTemp);", url_abstemp, config.ENTITY_MEMORY_DEVICE, -1)
	fmt.Fprintln(w, "")

	url_reltemp := fmt.Sprintf("/api/v1/hwmon/get/device/reltemp")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableTemp);", url_reltemp, config.ENTITY_PROCESSOR, -1)
	fmt.Fprintln(w, "")

	url_expectduty := fmt.Sprintf("/api/v1/hwmon/get/map/allexpectduty")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableExpectDuty);", url_expectduty, -1, -1)
	fmt.Fprintln(w, "")

	url_dutyout := fmt.Sprintf("/api/v1/hwmon/get/map/allfandutyout")
	fmt.Fprintf (w, "	request_to('%s', %d, %d, pushListToTableDutyOut);", url_dutyout, -1, -1)
	fmt.Fprintln(w, "")

	fmt.Fprintf (w, "}")
}

func PageLibs(w http.ResponseWriter) {
	fmt.Fprintln(w, "function lookup_entity(eid){")
	fmt.Fprintf (w, "	var e001 = %d; if (eid == e001) return e001 + ':CPU';", config.ENTITY_PROCESSOR)
	fmt.Fprintf (w, "	var e002 = %d; if (eid == e002) return e002 + ':AMB';", config.ENTITY_EXTERNAL_ENVIROMENT)
	fmt.Fprintf (w, "	var e003 = %d; if (eid == e003) return e003 + ':AIC';", config.ENTITY_ADD_IN_CARD)
	fmt.Fprintf (w, "	var e004 = %d; if (eid == e004) return e004 + ':FAN';", config.ENTITY_FAN_COOLING)
	fmt.Fprintf (w, "	var e005 = %d; if (eid == e005) return e005 + ':DIMM';", config.ENTITY_MEMORY_DEVICE)
	fmt.Fprintln(w, "	return 'NA';")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function genInstantTable(entity, instant){")
	fmt.Fprintln(w, "	var el_t = document.createElement('p');")
	fmt.Fprintln(w, "	el_t.setAttribute('id', 'T_' + entity + '_' + instant);")
	fmt.Fprintln(w, "	if (instant === 0) {")
	fmt.Fprintln(w, "		el_t.innerHTML=lookup_entity(entity);")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "	var el_f = document.createElement('p');")
	fmt.Fprintln(w, "	el_f.setAttribute('id', 'F_' + entity + '_' + instant);")
	fmt.Fprintln(w, "	var el_d = document.createElement('p');")
	fmt.Fprintln(w, "	el_d.setAttribute('id', 'D_' + entity + '_' + instant);")

	fmt.Fprintln(w, "	var tbl = document.createElement('table');")
	fmt.Fprintln(w, "	tbl.setAttribute('border', '0');")
	fmt.Fprintln(w, "	var tr = document.createElement('tr');")
	fmt.Fprintln(w, "	var tr2 = document.createElement('tr');")
	fmt.Fprintln(w, "	var tr3 = document.createElement('tr');")
	fmt.Fprintln(w, "	var td = document.createElement('td');")
	fmt.Fprintln(w, "	var td2 = document.createElement('td');")
	fmt.Fprintln(w, "	var td3 = document.createElement('td');")
	fmt.Fprintln(w, "	td.appendChild(el_t);")
	fmt.Fprintln(w, "	td2.appendChild(el_f);")
	fmt.Fprintln(w, "	td3.appendChild(el_d);")
	fmt.Fprintln(w, "	tr.appendChild(td);")
	fmt.Fprintln(w, "	tr2.appendChild(td2);")
	fmt.Fprintln(w, "	tr3.appendChild(td3);")
	fmt.Fprintln(w, "	tbl.appendChild(tr);")
	fmt.Fprintln(w, "	tbl.appendChild(tr2);")
	fmt.Fprintln(w, "	tbl.appendChild(tr3);")
	fmt.Fprintln(w, "	return tbl;")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function pushListToTableFan(list) {")
	fmt.Fprintln(w, "	var text = '';")
	fmt.Fprintln(w, "	var el_name = '';")
	fmt.Fprintln(w, "	var found = 0;")
	fmt.Fprintln(w, "	for(var key in list){")
	fmt.Fprintln(w, "		var dev = list[key];")
	fmt.Fprintln(w, "		if(dev.valuetype === 0xF0) {")
	fmt.Fprintln(w, "			//el.innerHTML = 'NA';")
	fmt.Fprintln(w, "		} else {")
	fmt.Fprintln(w, "			el_name = 'F_' + dev.entity + '_' + dev.instant;")
	fmt.Fprintln(w, "			text +=dev.value +',';")
	fmt.Fprintln(w, "			found = 1;")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "	if(found) {")
	fmt.Fprintln(w, "		var el = document.getElementById(el_name);")
	fmt.Fprintln(w, "		el.innerHTML = text;")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function pushListToTableDutyOut(list) {")
	fmt.Fprintln(w, "	for(var key in list){")
	fmt.Fprintln(w, "		var dev = list[key];")
	fmt.Fprintln(w, "		if(dev.valuetype === 0xF0) {")
	fmt.Fprintln(w, "			//el.innerHTML = 'NA';")
	fmt.Fprintln(w, "		} else {")
	fmt.Fprintln(w, "			el_name = 'D_' + dev.entity + '_' + dev.instant;")
	fmt.Fprintln(w, "			var el = document.getElementById(el_name);")
	fmt.Fprintln(w, "			el.innerHTML = dev.value;")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function pushListToTableExpectDuty(list) {")
	fmt.Fprintln(w, "	for(var key in list){")
	fmt.Fprintln(w, "		var dev = list[key];")
	fmt.Fprintln(w, "		if(dev.valuetype === 0xF0) {")
	fmt.Fprintln(w, "			//el.innerHTML = 'NA';")
	fmt.Fprintln(w, "		} else {")
	fmt.Fprintln(w, "			el_name = 'D_' + dev.entity + '_' + dev.instant;")
	fmt.Fprintln(w, "			var el = document.getElementById(el_name);")
	fmt.Fprintln(w, "			el.innerHTML = dev.value;")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function pushListToTableTemp(list) {")
	fmt.Fprintln(w, "	for(var key in list){")
	fmt.Fprintln(w, "		var dev = list[key]")
	fmt.Fprintln(w, "		if(dev.valuetype === 0xF0) {")
	fmt.Fprintln(w, "			//el.innerHTML = 'NA';")
	fmt.Fprintln(w, "		} else {")
	fmt.Fprintln(w, "			var el_name = 'T_' + dev.entity + '_' + dev.instant;")
	fmt.Fprintln(w, "			var el = document.getElementById(el_name);")
	fmt.Fprintln(w, "			el.innerHTML = dev.value;")
	fmt.Fprintln(w, "			request_to('/api/v1/hwmon/get/device/fanmap', dev.entity, dev.instant, pushListToTableFan);")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function request_to(url, eid, idx, callback){")
	fmt.Fprintln(w, "	var json_data = {entity:eid, instant:idx};")
	fmt.Fprintln(w, "	var xhr = new XMLHttpRequest();")
	fmt.Fprintln(w, "	xhr.open('POST', url);")
	fmt.Fprintln(w, "	xhr.setRequestHeader('content-type', 'application/json');")
	fmt.Fprintln(w, "	xhr.onreadystatechange = function() {")
	fmt.Fprintln(w, "		if (xhr.readyState == 4) {")
	fmt.Fprintln(w, "			if(xhr.getResponseHeader('content-type')==='application/json'){")
	fmt.Fprintln(w, "				var response = JSON.parse(xhr.responseText);")
	fmt.Fprintln(w, "				callback(response.data);")
	fmt.Fprintln(w, "			}")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "    xhr.send(JSON.stringify(json_data));")
	fmt.Fprintln(w, "}")
	/*
	fmt.Fprintln(w, "function pushDataToTableTemp(data) {")
	fmt.Fprintln(w, "	console.log(data);")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function pushError(msg) {")
	fmt.Fprintln(w, "}")
	fmt.Fprintln(w, "function request_sensor_reading(url, eid, idx){")
	fmt.Fprintln(w, "	var json_data = {entity:eid, instant:idx};")
	fmt.Fprintln(w, "	var xhr = new XMLHttpRequest();")
	fmt.Fprintln(w, "	xhr.open('POST', url);")
	fmt.Fprintln(w, "	xhr.setRequestHeader('content-type', 'application/json');")
	fmt.Fprintln(w, "	xhr.onreadystatechange = function() {")
	fmt.Fprintln(w, "		if (xhr.readyState == 4) {")
	fmt.Fprintln(w, "			if(xhr.getResponseHeader('content-type')==='application/json'){")
	fmt.Fprintln(w, "				var response = JSON.parse(xhr.responseText);")
	fmt.Fprintln(w, "				if (idx == -1) {pushListToTableTemp(response.data);}")
	fmt.Fprintln(w, "				else if (idx > 0) {pushDataToTableTemp(response.data);}")
	fmt.Fprintln(w, "				else {pushError(response.data);}")
	fmt.Fprintln(w, "			}")
	fmt.Fprintln(w, "		}")
	fmt.Fprintln(w, "	}")
	fmt.Fprintln(w, "    xhr.send(JSON.stringify(json_data));")
	fmt.Fprintln(w, "}")
	*/
}

func PageDebug(w http.ResponseWriter, r* http.Request) {
    fmt.Fprintln(w, "<html><body>")
    fmt.Fprintln(w, "<script>")

	PageLibs(w)
	PageGenTable(w)
	PageTimer(w)
	PageRequestSensor(w)

    fmt.Fprintln(w, "</script>")
    fmt.Fprintln(w, "<table><tr><td>Temperature</td></tr><tr><td>Device Map to Fan</td></tr><tr><td>Expect Fan Duty</td></tr></table>")
    fmt.Fprintln(w, "</body></html>")
}
